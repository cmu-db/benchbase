# Template: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
#
# Useful links
# - GitHub Actions: https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions
# - Service containers: https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
#
# The CI jobs are set up as follows:
# - One job to build and upload artifacts.
# - One job per DBMS test suite.

name: BenchBase (Java with Maven)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  POM_VERSION: 2021-SNAPSHOT
  JAVA_VERSION: 17

jobs:
  compile-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{env.JAVA_VERSION}}
          cache: 'maven'
          distribution: 'temurin'

      - name: Test with Maven
        run: mvn -B test --file pom.xml

  package-and-upload:
    needs: compile-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [ 'cockroachdb', 'mariadb', 'mysql', 'postgres', 'spanner', 'phoenix' ]
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{env.JAVA_VERSION}}
        cache: 'maven'
        distribution: 'temurin'

    - name: Package with Maven
      run: mvn -B package -P ${{matrix.profile}} --file pom.xml -DskipTests

    - name: Upload TGZ artifact
      uses: actions/upload-artifact@v2
      with:
        name: benchbase-${{matrix.profile}}
        path: target/benchbase-${{matrix.profile}}.tgz

  mariadb:
    needs: package-and-upload
    runs-on: ubuntu-latest
    strategy:
      matrix:
        benchmark: [ 'auctionmark', 'epinions', 'hyadapt', 'noop', 'resourcestresser', 'seats', 'sibench', 'smallbank', 'tatp', 'tpcc', 'tpch', 'twitter', 'voter', 'wikipedia', 'ycsb' ]
    services:
      mariadb: # https://hub.docker.com/_/mariadb
        image: mariadb:latest
        env:
          MARIADB_ROOT_PASSWORD: rootyMcRooty
          MARIADB_DATABASE: benchbase
          MARIADB_USER: admin
          MARIADB_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: benchbase-mariadb

      - name: Extract artifact
        run: |
          tar xvzf benchbase-mariadb.tgz --strip-components=1

      - name: Delete artifact
        run: |
          rm -rf benchbase-mariadb.tgz

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{env.JAVA_VERSION}}
          distribution: 'temurin'

      - name: Run benchmark
        env:
          MARIADB_PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MARIADB_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b ${{matrix.benchmark}} -c config/mariadb/sample_${{matrix.benchmark}}_config.xml --create=true --load=true --execute=true

  mysql:
    needs: package-and-upload
    runs-on: ubuntu-latest
    strategy:
      matrix:
        benchmark: [ 'auctionmark', 'epinions', 'hyadapt', 'noop', 'resourcestresser', 'seats', 'sibench', 'smallbank', 'tatp', 'tpcc', 'twitter', 'voter', 'wikipedia', 'ycsb' ]
    services:
      mysql: # https://hub.docker.com/_/mysql
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootyMcRooty
          MYSQL_DATABASE: benchbase
          MYSQL_USER: admin
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: benchbase-mysql

      - name: Extract artifact
        run: |
          tar xvzf benchbase-mysql.tgz --strip-components=1

      - name: Delete artifact
        run: |
          rm -rf benchbase-mysql.tgz

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{env.JAVA_VERSION}}
          distribution: 'temurin'

      - name: Run benchmark
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql -h127.0.0.1 -P$MYSQL_PORT -uadmin -ppassword -e "DROP DATABASE IF EXISTS benchbase; CREATE DATABASE benchbase"
          java -jar benchbase.jar -b ${{matrix.benchmark}} -c config/mysql/sample_${{matrix.benchmark}}_config.xml --create=true --load=true --execute=true


  postgresql:
    needs: package-and-upload
    runs-on: ubuntu-latest
    strategy:
      matrix:
        benchmark: [ 'auctionmark', 'epinions', 'hyadapt', 'noop', 'resourcestresser', 'seats', 'sibench', 'smallbank', 'tatp', 'tpcc', 'tpch', 'twitter', 'voter', 'wikipedia', 'ycsb' ]
    services:
      postgres: # https://hub.docker.com/_/postgres
        image: postgres:latest
        env:
          POSTGRES_DB: benchbase
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: benchbase-postgres

      - name: Extract artifact
        run: |
          tar xvzf benchbase-postgres.tgz --strip-components=1

      - name: Delete artifact
        run: |
          rm -rf benchbase-postgres.tgz

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{env.JAVA_VERSION}}
          distribution: 'temurin'

      - name: Run benchmark
        run: |
          PGPASSWORD=password dropdb -h localhost -U admin benchbase --if-exists
          PGPASSWORD=password createdb -h localhost -U admin benchbase
          java -jar benchbase.jar -b ${{matrix.benchmark}} -c config/postgres/sample_${{matrix.benchmark}}_config.xml --create=true --load=true --execute=true

  cockroachdb:
    needs: package-and-upload
    runs-on: ubuntu-latest
    strategy:
      matrix:
        benchmark: [ 'auctionmark', 'epinions', 'hyadapt', 'noop', 'resourcestresser', 'seats', 'sibench', 'smallbank', 'tatp', 'tpcc', 'tpch', 'twitter', 'voter', 'wikipedia', 'ycsb' ]
    services:
      cockroach: # https://hub.docker.com/repository/docker/timveil/cockroachdb-single-node
        image: timveil/cockroachdb-single-node:latest
        env:
          DATABASE_NAME: benchbase
          MEMORY_SIZE: .75
        ports:
          - 26257:26257
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: benchbase-cockroachdb

      - name: Extract artifact
        run: |
          tar xvzf benchbase-cockroachdb.tgz --strip-components=1

      - name: Delete artifact
        run: |
          rm -rf benchbase-cockroachdb.tgz

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{env.JAVA_VERSION}}
          distribution: 'temurin'

      - name: Run benchmark
        run: |
          java -jar benchbase.jar -b ${{matrix.benchmark}} -c config/cockroachdb/sample_${{matrix.benchmark}}_config.xml --create=true --load=true --execute=true
