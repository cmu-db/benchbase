<?xml version="1.0" encoding="utf-8"?>

<dialect xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SQLSERVER" xsi:noNamespaceSchemaLocation="dialect.xsd">
    <procedures>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q1">
            <statements>
                <statement name="query_stmt">
                    select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate &lt;= dateadd(dd, -1 * ?, cast('1998-12-01' as datetime)) group by l_returnflag, l_linestatus order by
                    l_returnflag, l_linestatus
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q2">
            <statements>
                <statement name="query_stmt">
                    select top 100 s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = ? and p_type like ? and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = ? and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and
                    n_regionkey = r_regionkey and r_name = ? ) order by s_acctbal desc, n_name, s_name, p_partkey
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q3">
            <statements>
                <statement name="query_stmt">
                    select top 10 l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = ? and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate &lt; ? and l_shipdate > ? group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q4">
            <statements>
                <statement name="query_stmt">
                    select o_orderpriority, count(*) as order_count from orders where o_orderdate >= ? and o_orderdate &lt; dateadd(mm, 3, cast(? as datetime)) and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate &lt; l_receiptdate ) group by o_orderpriority order by o_orderpriority
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q5">
            <statements>
                <statement name="query_stmt">
                    select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = ? and o_orderdate >= ? and o_orderdate &lt; dateadd(YY, 1, cast(? as datetime)) group by n_name order by revenue desc
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q6">
            <statements>
                <statement name="query_stmt">
                    select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= ? and l_shipdate &lt; dateadd(yy, 1, cast(? as datetime)) and l_discount between ? - 0.01 and ? + 0.01 and l_quantity &lt; ?
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q7">
            <statements>
                <statement name="query_stmt">
                    select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, datepart(yy, l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = ? and n2.n_name = ?) or (n1.n_name = ?
                    and
                    n2.n_name = ?) ) and l_shipdate between '1995-01-01' and '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q8">
            <statements>
                <statement name="query_stmt">
                    select o_year, sum(case when nation = ? then volume else 0 end) / sum(volume) as mkt_share from ( select datepart(yy,o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = ? and
                    s_nationkey = n2.n_nationkey and o_orderdate between '1995-01-01' and '1996-12-31' and p_type = ? ) as all_nations group by o_year order by o_year
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q9">
            <statements>
                <statement name="query_stmt">
                    select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, datepart(yy, o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like ? ) as profit group by nation, o_year order by
                    nation,
                    o_year desc
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q10">
            <statements>
                <statement name="query_stmt">
                    select top 20 c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= ? and o_orderdate &lt; dateadd(mm, 3, cast(? as datetime)) and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q12">
            <statements>
                <statement name="query_stmt">
                    select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority &lt;> '1-URGENT' and o_orderpriority &lt;> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in (?, ?) and l_commitdate &lt; l_receiptdate and l_shipdate &lt; l_commitdate and l_receiptdate >= ? and l_receiptdate &lt; dateadd(mm, 1, cast(? as datetime))
                    group
                    by l_shipmode order by l_shipmode
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q14">
            <statements>
                <statement name="query_stmt">
                    select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= ? and l_shipdate &lt; dateadd(mm, 1, cast(? as datetime))
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q15">
            <statements>
                <statement name="createview_stmt">
                    create view revenue0 (supplier_no, total_revenue) as select l_suppkey, sum(l_extendedprice * (1 - l_discount)) from lineitem where l_shipdate >= ? and l_shipdate &lt; dateadd(mm, 3, cast(? as datetime)) group by l_suppkey
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q18">
            <statements>
                <statement name="query_stmt">
                    select top 100 c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > ? ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q20">
            <statements>
                <statement name="query_stmt">
                    select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like ? ) and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= ? and l_shipdate &lt; dateadd(yy, 1, cast(? as datetime)) ) ) and s_nationkey = n_nationkey and n_name = ? order by s_name
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q21">
            <statements>
                <statement name="query_stmt">
                    select top 100 s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey &lt;> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey &lt;> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate )
                    and
                    s_nationkey = n_nationkey and n_name = ? group by s_name order by numwait desc, s_name
                </statement>
            </statements>
        </procedure>
        <procedure procedureClass="com.oltpbenchmark.benchmarks.tpch.procedures.Q22">
            <statements>
                <statement name="query_stmt">
                    select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone, 1, 2) as cntrycode, c_acctbal from customer where substring(c_phone, 1, 2) in (?, ?, ?, ?, ?, ?, ?) and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone, 1, 2) in (?, ?, ?, ?, ?, ?, ?) ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode
                </statement>
            </statements>
        </procedure>
    </procedures>
</dialect>