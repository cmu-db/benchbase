#TEST FOR YUGABYTE REGULAR TABLES
#GOAL7 from tab Scan queries of doc https://docs.google.com/spreadsheets/d/1-M1i5tWJQJdbmtv7mz_20MZsT2Oqh_T3-6m12qKAMcA/edit#gid=796784261:
# Range lookup with different number of return columns (Range primary key) (full table scan)
#TESTS:
#   Time to fetch 1 column from schema that has 1 column
#   Time to fetch 10 column from schema that has 10 column
#   Time to fetch 100 column from schema that has 100 column
type: YUGABYTE
driver: com.yugabyte.Driver
url: jdbc:yugabytedb://{{endpoint}}:5433/yugabyte?sslmode=require&ApplicationName=featurebench&reWriteBatchedInserts=true
username: {{username}}
password: {{password}}
batchsize: 128
isolation: TRANSACTION_REPEATABLE_READ
loaderthreads: 1
terminals: 1
collect_pg_stat_statements: true
works:
    work:
        time_secs: 180
        active_terminals: 1
        rate: unlimited
        warmup: 240
microbenchmark:
    class: com.oltpbenchmark.benchmarks.featurebench.customworkload.YBDefaultMicroBenchmark
    properties:
        setAutoCommit: true
        create:
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_1column_1;
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_10column_1;
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_100column_1;
            - CREATE TABLE pkey_rangescan_fullTable_1column_1(col_bigint_id_1 bigint,PRIMARY KEY(col_bigint_id_1 ASC));
            - CREATE TABLE pkey_rangescan_fullTable_10column_1(col_bigint_id_1 bigint,col_bigint_1 bigint ,col_bigint_2 bigint ,col_bigint_3 bigint ,col_bigint_4 bigint ,col_bigint_5 bigint ,col_bigint_6 bigint ,col_bigint_7 bigint ,col_bigint_8 bigint ,col_bigint_9 bigint,PRIMARY KEY(col_bigint_id_1 ASC));
            - CREATE TABLE pkey_rangescan_fullTable_100column_1(col_bigint_id_1 bigint,col_bigint_1 bigint ,col_bigint_2 bigint ,col_bigint_3 bigint ,col_bigint_4 bigint ,col_bigint_5 bigint ,col_bigint_6 bigint ,col_bigint_7 bigint ,col_bigint_8 bigint ,col_bigint_9 bigint ,col_bigint_10 bigint ,col_bigint_11 bigint ,col_bigint_12 bigint ,col_bigint_13 bigint ,col_bigint_14 bigint ,col_bigint_15 bigint ,col_bigint_16 bigint ,col_bigint_17 bigint ,col_bigint_18 bigint ,col_bigint_19 bigint ,col_bigint_20 bigint ,col_bigint_21 bigint ,col_bigint_22 bigint ,col_bigint_23 bigint ,col_bigint_24 bigint ,col_bigint_25 bigint ,col_bigint_26 bigint ,col_bigint_27 bigint ,col_bigint_28 bigint ,col_bigint_29 bigint ,col_bigint_30 bigint ,col_bigint_31 bigint ,col_bigint_32 bigint ,col_bigint_33 bigint ,col_bigint_34 bigint ,col_bigint_35 bigint ,col_bigint_36 bigint ,col_bigint_37 bigint ,col_bigint_38 bigint ,col_bigint_39 bigint ,col_bigint_40 bigint ,col_bigint_41 bigint ,col_bigint_42 bigint ,col_bigint_43 bigint ,col_bigint_44 bigint ,col_bigint_45 bigint ,col_bigint_46 bigint ,col_bigint_47 bigint ,col_bigint_48 bigint ,col_bigint_49 bigint ,col_bigint_50 bigint ,col_bigint_51 bigint ,col_bigint_52 bigint ,col_bigint_53 bigint ,col_bigint_54 bigint ,col_bigint_55 bigint ,col_bigint_56 bigint ,col_bigint_57 bigint ,col_bigint_58 bigint ,col_bigint_59 bigint ,col_bigint_60 bigint ,col_bigint_61 bigint ,col_bigint_62 bigint ,col_bigint_63 bigint ,col_bigint_64 bigint ,col_bigint_65 bigint ,col_bigint_66 bigint ,col_bigint_67 bigint ,col_bigint_68 bigint ,col_bigint_69 bigint ,col_bigint_70 bigint ,col_bigint_71 bigint ,col_bigint_72 bigint ,col_bigint_73 bigint ,col_bigint_74 bigint ,col_bigint_75 bigint ,col_bigint_76 bigint ,col_bigint_77 bigint ,col_bigint_78 bigint ,col_bigint_79 bigint ,col_bigint_80 bigint ,col_bigint_81 bigint ,col_bigint_82 bigint ,col_bigint_83 bigint ,col_bigint_84 bigint ,col_bigint_85 bigint ,col_bigint_86 bigint ,col_bigint_87 bigint ,col_bigint_88 bigint ,col_bigint_89 bigint ,col_bigint_90 bigint ,col_bigint_91 bigint ,col_bigint_92 bigint ,col_bigint_93 bigint ,col_bigint_94 bigint ,col_bigint_95 bigint ,col_bigint_96 bigint ,col_bigint_97 bigint ,col_bigint_98 bigint ,col_bigint_99 bigint,PRIMARY KEY(col_bigint_id_1 ASC));

        cleanup:
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_1column_1;
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_10column_1;
            - DROP TABLE IF EXISTS pkey_rangescan_fullTable_100column_1;
        loadRules:
            - table: pkey_rangescan_fullTable_1column_
              count: 1
              rows: 1000000
              columns:
                  - name: col_bigint_id_
                    count: 1
                    util: PrimaryIntGen
                    params: [1, 1000000]
            - table: pkey_rangescan_fullTable_10column_
              count: 1
              rows: 1000000
              columns:
                  - name: col_bigint_id_
                    count: 1
                    util: PrimaryIntGen
                    params: [1, 1000000]
                  - name: col_bigint_
                    count: 9
                    util: RandomNumber
                    params: [1, 1000000]
            - table: pkey_rangescan_fullTable_100column_
              count: 1
              rows: 1000000
              columns:
                  - name: col_bigint_id_
                    count: 1
                    util: PrimaryIntGen
                    params: [1, 1000000]
                  - name: col_bigint_
                    count: 99
                    util: RandomNumber
                    params: [1, 1000000]
        executeRules:
            - workload: scanG7_pkey_rangescan_fullTable_table1column_fetch1column
              run:
                  - name: pkey_rangescan_fullTable_table1column_fetch1column_test
                    weight: 100
                    queries:
                        - query: select * from pkey_rangescan_fullTable_1column_1 where col_bigint_id_1>1
            - workload: scanG7_pkey_rangescan_fullTable_table10column_fetch10column
              run:
                  - name: pkey_rangescan_fullTable_table10column_fetch10column_test
                    weight: 100
                    queries:
                        - query: select * from pkey_rangescan_fullTable_10column_1 where col_bigint_id_1>1
            - workload: scanG7_pkey_rangescan_fullTable_table100column_fetch100column
              run:
                  - name: pkey_rangescan_halfTable_table100column_fetch100column_test
                    weight: 100
                    queries:
                        - query: select * from pkey_rangescan_fullTable_100column_1 where col_bigint_id_1>1
