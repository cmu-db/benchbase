type: YUGABYTE
driver: com.yugabyte.Driver
url: jdbc:yugabytedb://{{endpoint}}:5433/yugabyte?sslmode=disable&ApplicationName=featurebench&reWriteBatchedInserts=true
username: {{username}}
password: {{password}}
createdb: drop database if exists yb_colocated; create database yb_colocated with colocated=true
batchsize: 128
isolation: TRANSACTION_REPEATABLE_READ
loaderthreads: 4
terminals: 1
collect_pg_stat_statements: true
use_dist_in_explain : true
yaml_version: v1.0
works:
    work:
        time_secs: 60
        rate: unlimited
        warmup: 30
microbenchmark:
    class: com.oltpbenchmark.benchmarks.featurebench.customworkload.YBDefaultMicroBenchmark
    properties:
        setAutoCommit: false
        create:
            - drop table if exists update_test_table1;
            - drop table if exists update_test_table2;
            - drop table if exists update_test_table3;
            - create table update_test_table1 (id bigint, col_int_1 int, col_int_2 int, col_int_3 int, col_int_4 int, col_int_5 int, col_int_6 int, col_int_7 int, col_int_8 int, col_int_9 int, col_int_10 int, col_varchar_1 varchar(20), col_varchar_2 varchar(20), col_varchar_3 varchar(20), col_date text, col_boolean boolean, primary key (id asc))
            - create table update_test_table2 (id bigint, col_int_1 int, col_int_2 int, col_int_3 int, col_int_4 int, col_int_5 int, col_int_6 int, col_int_7 int, col_int_8 int, col_int_9 int, col_int_10 int, col_varchar_1 varchar(20), col_varchar_2 varchar(20), col_varchar_3 varchar(20), col_date text, col_boolean boolean, primary key (id asc))
            - create table update_test_table3 (id bigint, col_int_1 int, col_int_2 int, col_int_3 int, col_int_4 int, col_int_5 int, col_int_6 int, col_int_7 int, col_int_8 int, col_int_9 int, col_int_10 int, col_varchar_1 varchar(20), col_varchar_2 varchar(20), col_varchar_3 varchar(20), col_date text, col_boolean boolean, primary key (id asc))
            - create index index_test_table2 on update_test_table2(col_int_1);
            - create index index_test_table3 on update_test_table3(col_int_2) include (col_int_1);
        cleanup:
            - drop table if exists update_test_table1;
            - drop table if exists update_test_table2;
            - drop table if exists update_test_table3;
        loadRules:
            -   table: update_test_table
                count: 3
                rows: 1000000
                columns:
                    -   name: id
                        util: PrimaryIntGen
                        params: [ 1, 1000000 ]
                    -   name: col_int_
                        count: 10
                        util: RandomNumber
                        params: [ 1, 1000000 ]
                    -   name: col_varchar_
                        count: 3
                        util: RandomAString
                        params: [ 20, 20 ]
                    -   name: col_date
                        util: RandomAString
                        params: [ 20, 20 ]
                    -   name: col_boolean
                        util: RandomBoolean
        executeRules:
            -   workload: update_non_index_column
                run:
                    -   name: Update_1_row
                        weight: 100
                        queries:
                            -   query: UPDATE update_test_table1 set col_int_1 = ? where id = ?
                                bindings:
                                    -   util: RandomNumber
                                        params: [ 1, 10000 ]
                                    -   util: RandomNumber
                                        params: [ 1, 1000000 ]
            -   workload: update_1_index_column
                run:
                    -   name: update_1_row
                        weight: 100
                        queries:
                            -   query: UPDATE update_test_table2 set col_int_1 = ? where id = ?
                                bindings:
                                    -   util: RandomNumber
                                        params: [ 1, 10000 ]
                                    -   util: RandomNumber
                                        params: [ 1, 1000000 ]
            -   workload: update_covering_index_column
                run:
                    -   name: update_1_row
                        weight: 100
                        queries:
                            -   query: UPDATE update_test_table3 set col_int_1 = ? where id = ?
                                bindings:
                                    -   util: RandomNumber
                                        params: [ 1, 10000 ]
                                    -   util: RandomNumber
                                        params: [ 1, 1000000 ]

