type: POSTGRES
driver: org.postgresql.Driver
url: jdbc:postgresql://{{endpoint}}:5432/postgres?sslmode=require&ApplicationName=featurebench&reWriteBatchedInserts=true
username: {{username}}
password: {{password}}
batchsize: 128
isolation: TRANSACTION_REPEATABLE_READ
loaderThreads: 1
terminals: 1
collect_pg_stat_statements: true
yaml_version: v1.0

works:
    work:
        time_secs: 60
        active_terminals: 1
        rate: unlimited
        warmup: 30
microbenchmark:
    class: com.oltpbenchmark.benchmarks.featurebench.customworkload.YBDefaultMicroBenchmark
    properties:
        setAutoCommit: false
        create:
            - DROP TABLE IF EXISTS employees_with_1_fk;
            - DROP TABLE IF EXISTS employees_with_2_fk_1_parent;

            - DROP TABLE IF EXISTS projects_with_1_ref;
            - DROP TABLE IF EXISTS projects_with_2_ref_1_child;
            - DROP TABLE IF EXISTS projects_without_ref;

            - create table projects_with_1_ref(id int primary key, uid int unique not null, name varchar(20) not null, start_date date not null, end_date date, budget decimal(10,2));
            - create table projects_with_2_ref_1_child(id int primary key, uid1 int unique, uid2 int unique, name varchar(20) not null, start_date date not null, end_date date, budget decimal(10,2));
            - create table projects_without_ref(id int primary key, uid int unique not null, name varchar(20) not null, start_date date not null, end_date date, budget decimal(10,2));

            - create table employees_with_1_fk(id int primary key,name varchar(20) not null, email varchar(100) not null, phone varchar(15), position varchar(10), salary decimal(10,2), project_id int not null);
            - create table employees_with_2_fk_1_parent(id int primary key,name varchar(20) not null, email varchar(100) not null, phone varchar(15), position varchar(10), salary decimal(10,2), project_uid1 int not null, project_uid2 int not null);

            - CREATE INDEX project_uid_index ON employees_with_1_fk (project_id);
            - CREATE INDEX project_uid1_index ON employees_with_2_fk_1_parent (project_uid1);
            - CREATE INDEX project_uid2_index ON employees_with_2_fk_1_parent (project_uid2);
        cleanup:
            - DROP TABLE IF EXISTS employees_with_1_fk;
            - DROP TABLE IF EXISTS employees_with_2_fk_1_parent;

            - DROP TABLE IF EXISTS projects_with_1_ref;
            - DROP TABLE IF EXISTS projects_with_2_ref_1_child;
            - DROP TABLE IF EXISTS projects_without_ref;
        loadRules:
            - table: projects_with_1_ref
              rows: 100000
              columns:
                  - name: id
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: uid
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: name
                    util: RandomAString
                    params: [1, 20]
                  - name: start_date
                    util: RandomDateBtwYears
                    params: [2000, 2025]
                  - name: end_date
                    util: RandomDateBtwYears
                    params: [2000, 2025]
                  - name: budget
                    util: RandomNoWithDecimalPoints
                    params: [1, 1000000, 2]

            - table: projects_without_ref
              rows: 100000
              columns:
                  - name: id
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: uid
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: name
                    util: RandomAString
                    params: [1, 20]
                  - name: start_date
                    util: RandomDateBtwYears
                    params: [2000, 2025]
                  - name: end_date
                    util: RandomDateBtwYears
                    params: [2000, 2025]
                  - name: budget
                    util: RandomNoWithDecimalPoints
                    params: [1, 1000000, 2]

            - table: projects_with_2_ref_1_child
              rows: 100000
              columns:
                  - name: id
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: uid1
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: uid2
                    util: PrimaryIntGen
                    params: [1, 100000]
                  - name: name
                    util: RandomAString
                    params: [1, 20]
                  - name: start_date
                    util: RandomDateBtwYears
                    params: [2000, 2025]
                  - name: end_date
                    util: RandomDateBtwYears
                    params: [2000, 2025]
                  - name: budget
                    util: RandomNoWithDecimalPoints
                    params: [1, 1000000, 2]

            - table: employees_with_1_fk
              rows: 1000000
              columns:
                  - name: id
                    util: PrimaryIntGen
                    params: [1, 1000000]
                  - name: name
                    util: RandomAString
                    params: [1, 20]
                  - name: email
                    util: RandomAString
                    params: [1, 100]
                  - name: phone
                    util: RandomNstring
                    params: [10, 15]
                  - name: position
                    util: RandomAString
                    params: [1, 10]
                  - name: salary
                    util: RandomNoWithDecimalPoints
                    params: [1, 1000000, 2]
                  - name: project_id
                    util: CyclicSeqIntGen
                    params: [1,100000]

            - table: employees_with_2_fk_1_parent
              rows: 1000000
              columns:
                  - name: id
                    util: PrimaryIntGen
                    params: [1, 1000000]
                  - name: name
                    util: RandomAString
                    params: [1, 20]
                  - name: email
                    util: RandomAString
                    params: [1, 100]
                  - name: phone
                    util: RandomNstring
                    params: [10, 15]
                  - name: position
                    util: RandomAString
                    params: [1, 10]
                  - name: salary
                    util: RandomNoWithDecimalPoints
                    params: [1, 1000000, 2]
                  - name: project_uid1
                    util: CyclicSeqIntGen
                    params: [1,100000]
                  - name: project_uid2
                    util: CyclicSeqIntGen
                    params: [1,100000]

        afterLoad:
            - ALTER TABLE employees_with_1_fk add CONSTRAINT fk_project FOREIGN KEY (project_id) REFERENCES projects_with_1_ref(uid) ON DELETE CASCADE ON UPDATE CASCADE;
            - ALTER TABLE employees_with_2_fk_1_parent add CONSTRAINT fk_project1 FOREIGN KEY (project_uid1) REFERENCES projects_with_2_ref_1_child(uid1) ON DELETE CASCADE ON UPDATE CASCADE;
            - ALTER TABLE employees_with_2_fk_1_parent add CONSTRAINT fk_project2 FOREIGN KEY (project_uid2) REFERENCES projects_with_2_ref_1_child(uid2) ON DELETE CASCADE ON UPDATE CASCADE;
            
        executeRules:

            - workload: FK_G2_1_no-fk_update
              run:
                  - name: FK_G2_1_no-fk_update
                    weight: 100
                    queries:
                        - query: update projects_without_ref set uid=uid+100000 where id=?;
                          bindings:
                            - util: PrimaryIntGen
                              params: [1, 100000]

            - workload: FK_G2_2_no-fk_delete
              run:
                  - name: FK_G2_2_no-fk_delete
                    weight: 100
                    queries:
                        - query: delete from projects_without_ref where id=?;
                          bindings:
                            - util: PrimaryIntGen
                              params: [1, 100000]

            - workload: FK_G2_3_1-fk_update
              run:
                  - name: FK_G2_3_1-fk_update
                    weight: 100
                    queries:
                        - query: update projects_with_1_ref set uid=uid+100000 where id=?;
                          bindings:
                            - util: PrimaryIntGen
                              params: [1, 100000]

            - workload: FK_G2_4_1-fk_delete
              run:
                  - name: FK_G2_4_1-fk_delete
                    weight: 100
                    queries:
                        - query: delete from projects_with_1_ref where id=?;
                          bindings:
                            - util: PrimaryIntGen
                              params: [1, 100000]

            - workload: FK_G2_5_2-fk_update
              run:
                  - name: FK_G2_5_2-fk_update
                    weight: 100
                    queries:
                        - query: update projects_with_2_ref_1_child set uid1=uid1+100000, uid2=uid2+100000 where id=?;
                          bindings:
                            - util: PrimaryIntGen
                              params: [1, 100000]

            - workload: FK_G2_6_2-fk_delete
              run:
                  - name: FK_G2_6_2-fk_delete
                    weight: 100
                    queries:
                        - query: delete from projects_with_2_ref_1_child where id=?;
                          bindings:
                            - util: PrimaryIntGen
                              params: [1, 100000]