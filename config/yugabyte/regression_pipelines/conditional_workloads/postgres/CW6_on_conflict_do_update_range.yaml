type: POSTGRES
driver: org.postgresql.Driver
url: jdbc:postgresql://{{endpoint}}:5432/postgres?sslmode=require&ApplicationName=featurebench&reWriteBatchedInserts=true
username: {{username}}
password: {{password}}
batchsize: 128
isolation: TRANSACTION_REPEATABLE_READ
loaderThreads: 1
terminals: 1
collect_pg_stat_statements: true
yaml_version: v1.0
works:
    work:
        time_secs: 180
        rate: unlimited
        warmup: 60
microbenchmark:
    class: com.oltpbenchmark.benchmarks.featurebench.customworkload.YBDefaultMicroBenchmark
    properties:
        setAutoCommit: true
        create:
            - DROP TABLE IF EXISTS CW6_accounts_1;
            - CREATE TABLE IF NOT EXISTS CW6_accounts_1(account_id_1 bigint, user_id_1 bigint, addr_1 varchar(50), bal_1 float(2),PRIMARY KEY(account_id_1));
            - CREATE UNIQUE INDEX CW6_user_accounts_1 ON CW6_accounts_1(account_id_1, user_id_1);

            - DROP TABLE IF EXISTS CW6_accounts_2;
            - CREATE TABLE IF NOT EXISTS CW6_accounts_2(account_id_1 bigint, user_id_1 bigint, addr_1 varchar(50), bal_1 float(2),PRIMARY KEY(account_id_1 ASC)) PARTITION BY RANGE (account_id_1);
            - CREATE TABLE IF NOT EXISTS CW6_0_2M_accounts_0 PARTITION OF CW6_accounts_2 FOR VALUES FROM (1) TO (2000000);
            - CREATE TABLE IF NOT EXISTS CW6_0_2M_accounts_1 PARTITION OF CW6_accounts_2 FOR VALUES FROM (2000000) TO (4000000);
            - CREATE TABLE IF NOT EXISTS CW6_0_2M_accounts_2 PARTITION OF CW6_accounts_2 FOR VALUES FROM (4000000) TO (6000000);
            - CREATE TABLE IF NOT EXISTS CW6_0_2M_accounts_3 PARTITION OF CW6_accounts_2 FOR VALUES FROM (6000000) TO (8000001);
        cleanup:
            - DROP TABLE IF EXISTS CW6_accounts_1;
            - DROP TABLE IF EXISTS CW6_accounts_2;

        loadRules:
            -   table: CW6_accounts_
                count: 2
                rows: 8000000
                columns:
                    -   name: account_id_
                        count: 1
                        util: PrimaryIntGen
                        params: [ 1, 8000000 ]
                    -   name: user_id_
                        count: 1
                        util: PrimaryIntGen
                        params: [ 1, 8000000 ]
                    -   name: addr_
                        count: 1
                        util: PrimaryStringGen
                        params: [ 1, 50 ]
                    -   name: bal_
                        count: 1
                        util: PrimaryFloatGen
                        params: [ 1, 8000000, 2 ]

        executeRules:
            - workload: CW6_1_2column_condition_no_conflict_on_pkey_so_single_insert
              run:
                  - name: statement1_insert
                    weight: 100
                    queries:
                        - query: INSERT INTO CW6_accounts_1(account_id_1,user_id_1,addr_1,bal_1) VALUES (?,?,?,?) ON CONFLICT (account_id_1) DO UPDATE SET (account_id_1,user_id_1,addr_1,bal_1)=(excluded.account_id_1,excluded.user_id_1,excluded.addr_1,excluded.bal_1)
                          bindings:
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 8000000, 2 ]

            - workload: CW6_2_2column_condition_no_conflict_on_pkey_so_1024_insert
              run:
                  - name: statement1_insert
                    weight: 100
                    queries:
                        - query: INSERT INTO CW6_accounts_1(account_id_1,user_id_1,addr_1,bal_1) VALUES (?,?,?,?) ON CONFLICT (account_id_1) DO UPDATE SET (account_id_1,user_id_1,addr_1,bal_1)=(excluded.account_id_1,excluded.user_id_1,excluded.addr_1,excluded.bal_1)
                          count: 1024
                          bindings:
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 8000000, 2 ]

            - workload: CW6_3_no_conflict_on_pkey_so_single_insert_on_partitioned_tbl_by_range
              run:
                  - name: statement1_insert
                    weight: 100
                    queries:
                        - query: INSERT INTO CW6_accounts_2(account_id_1,user_id_1,addr_1,bal_1) VALUES (?,?,?,?) ON CONFLICT (account_id_1) DO UPDATE SET (account_id_1,user_id_1,addr_1,bal_1)=(excluded.account_id_1,excluded.user_id_1,excluded.addr_1,excluded.bal_1)
                          bindings:
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 8000000, 2 ]

            - workload: CW6_4_no_conflict_on_pkey_so_1024_insert_on_partitioned_tbl_by_range
              run:
                  - name: statement1_insert
                    weight: 100
                    queries:
                        - query: INSERT INTO CW6_accounts_2(account_id_1,user_id_1,addr_1,bal_1) VALUES (?,?,?,?) ON CONFLICT (account_id_1) DO UPDATE SET (account_id_1,user_id_1,addr_1,bal_1)=(excluded.account_id_1,excluded.user_id_1,excluded.addr_1,excluded.bal_1)
                          count: 1024
                          bindings:
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 8000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 8000000, 2 ]

            - workload: CW6_5_2column_condition_10values_in_1upsert_with_returning
              run:
                  - name: statement1_insert
                    weight: 100
                    queries:
                        - query: INSERT INTO CW6_accounts_1(account_id_1,user_id_1,addr_1,bal_1) VALUES (?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?),(?,?,?,?) ON CONFLICT (user_id_1, account_id_1) DO UPDATE SET (account_id_1,user_id_1,addr_1,bal_1)=(excluded.account_id_1,excluded.user_id_1,excluded.addr_1,excluded.bal_1)
                          bindings:
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryIntGen
                                  params: [ 1, 6000000 ]
                              -   util: PrimaryStringGen
                                  params: [ 1, 50 ]
                              -   util: PrimaryFloatGen
                                  params: [ 1, 6000000, 2 ]