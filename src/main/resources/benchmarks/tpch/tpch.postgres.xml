<?xml version="1.0"?>
<dialects>
    <dialect type="POSTGRES">
        <procedure name="Q1">
            <statement name="query_stmt">
                select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate &lt;= date '1998-12-01' - concat(?,' day')::interval group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus
            </statement>
        </procedure>

        <procedure name="Q3">
            <statement name="query_stmt">
                select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = ? and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate &lt; ?::date and l_shipdate > ?::date group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10
            </statement>
        </procedure>

        <procedure name="Q4">
            <statement name="query_stmt">
                select o_orderpriority, count(*) as order_count from orders where o_orderdate >= ?::date and o_orderdate &lt; ?::date + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate &lt; l_receiptdate ) group by o_orderpriority order by o_orderpriority
            </statement>
        </procedure>

        <procedure name="Q5">
            <statement name="query_stmt">
                select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = ? and o_orderdate >= ?::date and o_orderdate &lt; ?::date + interval '1' year group by n_name order by revenue desc;
            </statement>
        </procedure>

        <procedure name="Q6">
            <statement name="query_stmt">
                select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= ?::date and l_shipdate &lt; ?::date + interval '1' year and l_discount between ?::decimal - 0.01 and ?::decimal + 0.01 and l_quantity &lt; ?
            </statement>
        </procedure>

        <procedure name="Q10">
            <statement name="query_stmt">
                select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= ?::date and o_orderdate &lt; ?::date + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc limit 20
            </statement>
        </procedure>

        <procedure name="Q12">
            <statement name="query_stmt">
                select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority &lt;> '1-URGENT' and o_orderpriority &lt;> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in (?, ?) and l_commitdate &lt; l_receiptdate and l_shipdate &lt; l_commitdate and l_receiptdate >= ?::date and l_receiptdate &lt; ?::date + interval '1' year group by l_shipmode order by l_shipmode
            </statement>
        </procedure>

        <procedure name="Q14">
            <statement name="query_stmt">
                select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= ?::date and l_shipdate &lt; ?::date + interval '1' month
            </statement>
        </procedure>

        <procedure name="Q15">
            <statement name="createview_stmt">
                create view revenue0 (supplier_no, total_revenue) as select l_suppkey, sum(l_extendedprice * (1 - l_discount)) from lineitem where l_shipdate >= ?::date and l_shipdate &lt; ?::date + interval '3' month group by l_suppkey
            </statement>
        </procedure>

        <procedure name="Q20">
            <statement name="query_stmt">
                select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like ? ) and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= ?::date and l_shipdate &lt; ?::date + interval '1' year ) ) and s_nationkey = n_nationkey and n_name = ? order by s_name
            </statement>
        </procedure>
        <procedure name="Q22">
            <statement name="query_stmt">
                select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from customer where substring(c_phone from 1 for 2) in (?, ?, ?, ?, ?, ?, ?) and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone from 1 for 2) in (?, ?, ?, ?, ?, ?, ?) ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode
            </statement>
        </procedure>

    </dialect>
</dialects>
